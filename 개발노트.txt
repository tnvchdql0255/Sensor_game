게임스테이지-sqlite 연결로직
flutter에서 제공하는 패키지 sqflite를 사용할 것임( 오타아님 sq'f'lite)
0.스테이지별 클리어 데이터를 저장할 변수 생성 (아마 arraylist가 될것임..json은 Listview에서 어떻게 순차적으로 읽게할지 모르겠음)
1.스테이지 설렉션 파일에서 sqlite 데이터베이스 헬퍼 인스턴스 생성
2.생성된 인스턴스로 스테이지별 클리어(True/false)데이터 검색
3.검색된 내용을 변수에 저장 /저장된 데이터는 0번인덱스부터 순차적으로 클리어했는지 안했는지 저장 
4.저장된 내용을 바탕으로 listView에 인덱스별로 클리어된스테이지+클리어된스테이지의 바로 다음스테이지를 언락 아이콘으로
5.나머지 스테이지는 락 아이콘으로 표시
6.스테이지별 파일에서 게임의 조건을 만족했을때( 클리어했을때 ) 데이터베이스에 클리어 했다고 알릴수 있어야 함
7.스테이지 선택창으로 돌아가면 클리어 상태는 스테이지에서 나갔을때를 인식해(다른방식으로도 상관없음) 다음 스테이지가
열리거나 , 그대로 잠긴 상태여야함 (즉각적인 반영이 가능해야함)

데이터 베이스 생성 로직
1.데이터베이스 헬퍼 인스턴스가 생성될때마다 인스턴스에서 설정해 놓은 경로에 데이터베이스가 존재하는지 확인
2.존재하지않는다면 데이터베이스 생성 (지금으로서는 /스테이지번호, 클리어 여부/ 이 두개가 속성이 될것임 )
3.존재한다면 생성하지않음


0326 중단점 오류 분석
스테이지 위젯들이 로딩되기 전까지 반드시 isClearedList가 초기화 되어야함
그런데 코드 구조상 그렇지 않음 getStage라는 비동기 함수를 initState에서 실행할게 아니라
 isClearedList 데이터가 필요한 내부 위젯에서 FutureBuilder로 감싸서 해당 위젯에서 처리해야 할듯함

0328스테이지 언락 파이프라인

1.초기값은 Stage =>1~30, isCleared => 0, Stage.1.iscleared = 1
isCleared가 0이면 스테이지 진입 불가
isCleared가 1이면 다음 스테이지를 isCleared = 1로 만드는 것은 직관적이지 않음. 실제로 클리어한게 아니기 때문.
속성명을 수정해야 할듯함

isAccessible로 바꾸면?
초기 1스테이지는 1
나머지스테이지는 0

1스테이지를 클리어 했을때,
2스테이지의 isAccessible 값을 1로 변경.. 이게더 직관적임
===변경점===
그래서 현재 DB의 속성은 (StageNum, isCleared, isAccessible)이고, 데이터형식은 int, bool, bool 임
특이한건 sqlite는 bool속성을 지원하지 않는데 (공식문서에서는 정수,문자열,BOLB,실수 만 지원함)정상적으로 컴파일되는점
아마 integer상태를 0, 1로 저장하는 방식으로 컴파일 되는것 같음(추측)
-더이상 스테이지 언락 지표를 isCleared 로 판정하지 않음
-이제 스테이지 언락지표는 isAccessible이 대신함
-예를들어, 1스테이지를 클리어했을때, changeIsAccessible 메소드를 사용해 2,true 값을 넘겨 다음스테이지를 언락함
-스테이지 클리어시 해당 스테이지를 changeIsCleared를 통해 (현재 스테이지 인덱스, true)로 바꿔줘야함
-현재로서는 isCleared가 딱히 역할을 가지지는 않지만 추후 생겨날 기능에 대비해 남겨두었음

교수님이 의뢰하셨던 영어 지원을 고려하면 좋을듯함
-메인페이지에 Language 설정을 추가해 한국어/english 옵션을 만들생각임
-Language State를 추가해 클래스에서 langState를 확인해 텍스트를 한국어/영어로 변경해 보여주면 좋을듯
-해당 스테이트는 클래스에서 직접 context 형태로 넘겨주게되면 context hell(RN props hell과 동일한 문제) 이 확정이므로
state 관리 패키지를 사용해야 할것임
해당 기능을 코어기술 이후 추가로 개발할것인지, 아니면 코어기술과 병행해 코드를 작성할것인지 생각해 봐야함

0401 게임스테이지 공통 UI 개발
원래는 모든 상태별로 클래스를 만들어 구현하려 했으나 불필요하다고 판단함
하나의 클래스에 전부 몰아서 메서드 분할 방식으로 구현할 예정
메서드는 시작 메시지, 힌트창, 실패 창, 성공시 나오는 창
일부 메서드는 alertDialog로 제작하기 부적합 할 수있으나 일단 시도

만드는 중에 깨달은건 UI 가 매우 보기 안좋다는점
상단 drawer 로 구현할걸 그랬다..

0402 창별 버튼 기능구현
성공/실패창에 있는 리로드(다시해보기) 버튼 기능을 어떻게 구현할지?
-앱 자체를 리빌드 하는것은 안된다
-스테이지 마다 조건이 다르므로 공통되는 속성을 찾아 메소드화 할수 없다 (공통되는 속성이 없으므로)
-따라서 성공 창 로드 이후 then 메서드를 통해 스테이지 별 초기화 코드는 직접 어떤 데이터를 
  초기화 할 것인지 작성해야 한다.


0402 기능 구현 완료
그러나 왜인지는 모르겠지만 sqlite에서 bool 타입을 지원 하지 않아도 코드상에서 형변환을 해 자동으로 DB 에 등록하는것으로
간주하였으나 지금와서 다시 코드를 돌렸을때, 경고메시지가 콘솔창에 뜸
(Invalid argument true with type bool/Only num, String and Uint8List are supported)
하지만 제대로 돌아가기는 함.. 필요하다면 나중에 다시 정수값 0이나 1 보내는 방식으로 바꿔야겠음 (데이터베이스쪽 테이블 재구성 해야함)
-이제 클리어 했을때 메시지가 뜨도록 구현하였음
-메뉴버튼을 누르면 정상적으로 스테이지 선택창으로 돌아감
-다시해보기 버튼또한 정상적으로 동작함
-VM 상의 문제인지 코드 수정이 필요한건지는 모르겠으나, 스테이지 재시작할 경우 chargingState가 충전 이여도 퍼센테이지가 안올라감
  다시 discharging으로 바꿨다가 charging 으로 바꿔야 올라가는데 확인필요
모든 스테이지는 showCleardMessage() 메서드 실행후 .then() 메서드를 사용해 다음 행동을 결정할 수 있음
위에도 설명했듯이 스테이지마다 초기화 해야할 데이터가 다르므로 then 메서드 안에는 각기다른 초기화 코드가 필요함
다이얼로그창 자체는 나쁘지 않으나 디자인을 변경해야할 것 같음 너무 못생김

힌트창은 다른 창보다 넣어야 할 코드가 더 많으므로  start.dart 에서 작업하지말고 다른데 따로 만들어서 해야할듯함
아직 힌트창 작업은 안했음
어떻게 추가하는지 모르겠으면 stage_L_1 코드 참조

0412 네이티브 코드- 플러터 연결 구현에 성공함
가장큰 장점은 센서 상수값만 바꾸면 여러 센서를 사용할 수 있어서 응용만 잘하면
전체 코드분량이 매우 큰폭으로 감소할 것이라는점
이벤트 채널을 통해 네이티브 코드와 채널을 동기화 시킨후 broadcastStream 을 통해 플러터에서 데이터를 받음
데이터가 변경될때마다 네이티브코드쪽에서 방송하기때문에 따로 타이머객체를 쓸 필요도 없음

